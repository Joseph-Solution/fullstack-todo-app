name: CI/CD Pipeline - Build and Push to ECR

on:
  push:
    branches: [ main ] # 只在 main 分支被推送时触发

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 虚拟环境

    steps:
    # 第一步：检出代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 第二步：配置 AWS 凭证
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} # 例如：ap-southeast-2

    # 第三步：登录到 AWS ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # 第四步：构建、标记并推送后端镜像
    - name: Build and push backend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # 你将在 AWS 上创建的仓库名
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-backend:$IMAGE_TAG -f server/Dockerfile ./server
        docker push $ECR_REGISTRY/$ECR_REPOSITORY-backend:$IMAGE_TAG

    # 第五步：构建、标记并推送前端镜像
    - name: Build and push frontend image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-frontend:$IMAGE_TAG -f client/Dockerfile ./client
        docker push $ECR_REGISTRY/$ECR_REPOSITORY-frontend:$IMAGE_TAG